









const _0x46107e = _0x3cf1;
(function (_0x8cda34, _0x50ac5c) {
    const _0x3a5312 = _0x3cf1, _0x25bcda = _0x8cda34();
    while (!![]) {
        try {
            const _0x1b3446 = parseInt(_0x3a5312(0x189)) / (-0x506 + -0x21 * 0x100 + 0x2607) + parseInt(_0x3a5312(0x197)) / (0xb * 0x25 + -0x3 * 0x85 + -0x6) * (-parseInt(_0x3a5312(0x193)) / (-0x15f4 + -0x1f * 0x67 + 0x2270)) + -parseInt(_0x3a5312(0x199)) / (0x3fa * -0x8 + -0x1533 + 0x3507) * (-parseInt(_0x3a5312(0x191)) / (-0x6d * 0x1d + -0x1e + 0xc7c)) + -parseInt(_0x3a5312(0x19a)) / (-0x1 * 0xa6b + 0x9a * -0x17 + 0x1847) * (-parseInt(_0x3a5312(0x194)) / (-0x9a4 + -0x8ea * -0x3 + -0x8d * 0x1f)) + -parseInt(_0x3a5312(0x19f)) / (0x167 * 0x1a + 0x91b + -0x2d89) * (-parseInt(_0x3a5312(0x192)) / (-0x20 + 0x197b + -0x1952)) + parseInt(_0x3a5312(0x1a1)) / (-0x9f6 + -0x1 * 0x769 + -0x1169 * -0x1) * (parseInt(_0x3a5312(0x190)) / (-0x555 + 0x2bd + 0x2a3)) + parseInt(_0x3a5312(0x183)) / (-0xe0b * -0x1 + -0x248e + 0x168f) * (-parseInt(_0x3a5312(0x18b)) / (0x1b * 0x51 + 0x1e85 * 0x1 + -0xd01 * 0x3));
            if (_0x1b3446 === _0x50ac5c)
                break;
            else
                _0x25bcda['push'](_0x25bcda['shift']());
        } catch (_0x323500) {
            _0x25bcda['push'](_0x25bcda['shift']());
        }
    }
}(_0x4907, 0x19d08 + 0x5d0b * 0x1 + -0x79f * -0x8));
function _0x3cf1(_0x31e202, _0x1f4dbc) {
    const _0x320c6e = _0x4907();
    return _0x3cf1 = function (_0x162b36, _0x36016e) {
        _0x162b36 = _0x162b36 - (-0x211f * 0x1 + -0x1 * -0x2272 + -0x2f * -0x1);
        let _0x5ce9cd = _0x320c6e[_0x162b36];
        return _0x5ce9cd;
    }, _0x3cf1(_0x31e202, _0x1f4dbc);
}
const {king} = require(_0x46107e(0x1a2) + _0x46107e(0x187));
king({
    'nomCom': _0x46107e(0x1a0),
    'categorie': _0x46107e(0x19e),
    'reaction': _0x46107e(0x188)
}, async (_0x260afd, _0x15b736, _0x2ccf8c) => {
    const _0x160bb1 = _0x46107e, _0x50c19c = {
            'aFwub': function (_0x5cf421, _0x3fcab4) {
                return _0x5cf421(_0x3fcab4);
            },
            'ezsgr': _0x160bb1(0x18e) + _0x160bb1(0x185) + _0x160bb1(0x18d) + _0x160bb1(0x19c),
            'ZCfhW': function (_0x198f5e, _0x7459f7) {
                return _0x198f5e(_0x7459f7);
            },
            'USyUL': _0x160bb1(0x19d) + _0x160bb1(0x196),
            'ahwjW': _0x160bb1(0x19b) + _0x160bb1(0x1a3),
            'dOfXE': function (_0xc03e02, _0x2d19bd) {
                return _0xc03e02(_0x2d19bd);
            },
            'QNdww': _0x160bb1(0x18f) + _0x160bb1(0x18a)
        }, {
            repondre: _0x32fd78,
            ms: _0x554faf,
            dev: _0x209b6c,
            superUser: _0x2a1c32
        } = _0x2ccf8c;
    if (!_0x2a1c32)
        return _0x50c19c[_0x160bb1(0x18c)](_0x32fd78, _0x50c19c[_0x160bb1(0x198)]);
    const {exec: _0x3fd42f} = _0x50c19c[_0x160bb1(0x182)](require, _0x50c19c[_0x160bb1(0x195)]);
    _0x50c19c[_0x160bb1(0x182)](_0x32fd78, _0x50c19c[_0x160bb1(0x1a4)]), _0x50c19c[_0x160bb1(0x186)](_0x3fd42f, _0x50c19c[_0x160bb1(0x184)]);
});
function _0x4907() {
    const _0x1e6aa7 = [
        '...*',
        'ahwjW',
        'ZCfhW',
        '98628FJeGBb',
        'QNdww',
        'nd\x20is\x20for\x20',
        'dOfXE',
        'king',
        'üë®üèø‚Äçüíº',
        '214976vxCfjo',
        't\x20all',
        '1105fHyies',
        'aFwub',
        'my\x20owner\x20o',
        'This\x20comma',
        'pm2\x20restar',
        '1927519CJIABk',
        '250UAowsT',
        '9gEvUMB',
        '6xjScYr',
        '2310tRLFMz',
        'USyUL',
        'ess',
        '122414cOVqoE',
        'ezsgr',
        '11156OPefib',
        '4374EpXyeb',
        '*Rebooting',
        'nly',
        'child_proc',
        'User',
        '1567736vEEPTp',
        'reboot',
        '10GAZfwt',
        '../france/'
    ];
    _0x4907 = function () {
        return _0x1e6aa7;
    };
    return _0x4907();
                                  } 
